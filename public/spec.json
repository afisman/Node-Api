{
    "swagger": "2.0",
    "info": {
        "description": "Api for Miranda Dashboard project",
        "version": "1.0.7",
        "title": "API miranda",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "afisman@gmail.com"
        }
    },
    "host": "https://vevpsavqpa.execute-api.eu-west-3.amazonaws.com/dev/",
    "basePath": "/v2",
    "tags": [
        {
            "name": "bookings",
            "description": "Bookings informaction"
        },
        {
            "name": "rooms",
            "description": "Rooms information"
        },
        {
            "name": "users",
            "description": "Users information"
        },
        {
            "name": "messages",
            "description": "Message information"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/bookings": {
            "get": {
                "tags": [
                    "bookings"
                ],
                "summary": "Get All bookings",
                "description": "Get All bookings",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Bookings"
                        }
                    },
                    "404": {
                        "description": "Bookings not found"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "tags": [
                    "bookings"
                ],
                "summary": "Get booking by id",
                "description": "Get booking by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Bookings"
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/bookings/create": {
            "post": {
                "tags": [
                    "bookings"
                ],
                "summary": "Creates new booking",
                "description": "Creates new booking",
                "operationId": "createBooking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Booking object to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bookings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking created succesfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bookings"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/bookings/edit/{id}": {
            "put": {
                "tags": [
                    "bookings"
                ],
                "summary": "Edits booking",
                "description": "Edits booking",
                "operationId": "editBooking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Booking object to be edited",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bookings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking created succesfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bookings"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/bookings/delete/{id}": {
            "delete": {
                "tags": [
                    "bookings"
                ],
                "summary": "Deletes a booking",
                "description": "Deletes a booking",
                "operationId": "deleteBooking",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bookingId",
                        "in": "path",
                        "description": "Booking id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking deleted succesfully"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Room not found"
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "tags": [
                    "rooms"
                ],
                "summary": "Get all rooms ",
                "description": "Get all rooms",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Rooms"
                        }
                    },
                    "404": {
                        "description": "Rooms not found"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "tags": [
                    "rooms"
                ],
                "summary": "Get room by id",
                "description": "Get room by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Rooms"
                        }
                    },
                    "404": {
                        "description": "Room not found"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/rooms/create": {
            "post": {
                "tags": [
                    "rooms"
                ],
                "summary": "Creates new room",
                "description": "Creates new room",
                "operationId": "createRoom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Room object to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Rooms"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room created succesfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Rooms"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/rooms/edit/{id}": {
            "put": {
                "tags": [
                    "rooms"
                ],
                "summary": "Edits room",
                "description": "Edits room",
                "operationId": "editRoom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Room object to be edited",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Rooms"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room edited succesfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Rooms"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/rooms/delete/{id}": {
            "delete": {
                "tags": [
                    "rooms"
                ],
                "summary": "Deletes a room",
                "description": "Deletes a room",
                "operationId": "deleteRoom",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "description": "Room id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room deleted succesfully"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Room not found"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users ",
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "404": {
                        "description": "Users not found"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by id",
                "description": "Get user by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Creates new user",
                "description": "CreateUserw user",
                "operationId": "createUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created succesfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Users"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/users/edit/{id}": {
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Edits user",
                "description": "Edits user",
                "operationId": "editUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object to be edited",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User edited succesfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Users"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/users/delete/{id}": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Deletes a user",
                "description": "Deletes a user",
                "operationId": "deleteUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted succesfully"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/contact": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Get all messages ",
                "description": "Get all messages",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "404": {
                        "description": "Messages not found"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/contact/{id}": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Get message by id",
                "description": "Get message by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "404": {
                        "description": "Message not found"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/contact/create": {
            "post": {
                "tags": [
                    "contact"
                ],
                "summary": "Creates new message",
                "description": "Create neww message",
                "operationId": "createContact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Contact object to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact created succesfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/contact/edit/{id}": {
            "put": {
                "tags": [
                    "contact"
                ],
                "summary": "Edits message",
                "description": "Edits message",
                "operationId": "editContact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Contact object to be edited",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact edited succesfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "User is not authenticated"
                    }
                }
            }
        },
        "/contact/delete/{id}": {
            "delete": {
                "tags": [
                    "contact"
                ],
                "summary": "Deletes a message",
                "description": "Deletes a message",
                "operationId": "deleteContact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted succesfully"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Bookings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 42
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "example": "James Callahan"
                },
                "order_date": {
                    "type": "string",
                    "format": "string",
                    "example": "2022-12-18T14:32:14Z"
                },
                "check_in": {
                    "type": "string",
                    "format": "string",
                    "example": "2023-04-29T10:20:36Z"
                },
                "check_out": {
                    "type": "string",
                    "format": "string",
                    "example": "2023-05-04T15:22:27Z"
                },
                "hour_check_in": {
                    "type": "string",
                    "format": "string",
                    "example": "10:20"
                },
                "hour_check_out": {
                    "type": "string",
                    "format": "string",
                    "example": "15:22"
                },
                "room_type": {
                    "type": "string",
                    "format": "string",
                    "example": "Deluxe -002424"
                },
                "rate": {
                    "type": "string",
                    "format": "string",
                    "example": "$150"
                },
                "special_request": {
                    "type": "string",
                    "format": "string",
                    "example": "James Callahan has asked for a room overlooking the ocean for his reservation"
                },
                "room": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64",
                            "example": 3
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "format": "string",
                    "example": "In progress"
                }
            }
        },
        "Rooms": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 11
                },
                "photos": {
                    "type": "array",
                    "example": [
                        "https://media.istockphoto.com/id/1194125655/es/foto/habitaci%C3%B3n-moderna-con-escritorio-y-ropa-de-cama.jpg?s=2048x2048&w=is&k=20&c=pD_iq_7rqRRKdMefzxcI5DRo0UQXo3x_kyVRn_LxTCg=",
                        "https://images.unsplash.com/photo-1618773928121-c32242e63f39?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                        "https://images.unsplash.com/photo-1444201983204-c43cbd584d93?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                    ]
                },
                "room_type": {
                    "type": "string",
                    "format": "string",
                    "example": "Deluxe Room"
                },
                "room_number": {
                    "type": "string",
                    "format": "string",
                    "example": "Deluxe -002424"
                },
                "description": {
                    "type": "string",
                    "format": "string",
                    "example": "Deluxe room with Double-size bed, Luxury bathroom and built-in closet."
                },
                "offer": {
                    "type": "string",
                    "format": "string",
                    "example": "No"
                },
                "room_floor": {
                    "type": "string",
                    "format": "string",
                    "example": "Floor 2"
                },
                "rate": {
                    "type": "integer",
                    "format": "int64",
                    "example": 150
                },
                "amenities": {
                    "tyoe": "array",
                    "example": [
                        "Luxury bathroom",
                        "Double-size bed",
                        "Built-in closet"
                    ]
                },
                "status": {
                    "type": "string",
                    "format": "string",
                    "example": "Booked"
                },
                "discount": {
                    "type": "string",
                    "format": "string",
                    "example": "0%"
                }
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 11
                },
                "full_name": {
                    "type": "string",
                    "format": "string",
                    "example": "Stanislaus Law"
                },
                "contact": {
                    "type": "string",
                    "format": "string",
                    "example": "9262240883"
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "example": "smellmotha@gov.uk"
                },
                "photo": {
                    "type": "string",
                    "format": "string",
                    "example": "https://images.unsplash.com/photo-1599566150163-29194dcaad36?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                },
                "start_date": {
                    "type": "string",
                    "format": "string",
                    "example": "2022-02-10"
                },
                "decription": {
                    "type": "string",
                    "format": "string",
                    "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                },
                "status": {
                    "type": "string",
                    "format": "string",
                    "example": "Active"
                },
                "position": {
                    "type": "string",
                    "format": "string",
                    "example": "Manager"
                },
                "password": {
                    "type": "string",
                    "format": "string",
                    "example": "12345"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 11
                },
                "image": {
                    "type": "string",
                    "format": "string",
                    "example": "https://plus.unsplash.com/premium_photo-1664536392896-cd1743f9c02c?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                },
                "full_name": {
                    "type": "string",
                    "format": "string",
                    "example": "Maria Paez"
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "example": "mapa@mail.com"
                },
                "phone": {
                    "type": "string",
                    "format": "string",
                    "example": "135 623 3232"
                },
                "date": {
                    "type": "string",
                    "format": "string",
                    "example": "2024-01-17"
                },
                "message": {
                    "type": "string",
                    "format": "string",
                    "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                },
                "rating": {
                    "type": "integer",
                    "format": "int64",
                    "example": 4
                },
                "read": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}